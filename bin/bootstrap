#!/bin/bash
# -*- coding: utf-8 -*-
#
# jomiel-proto
#
# Copyright
#  2019-2022 Toni Gündoğdu
#
#
# SPDX-License-Identifier: Apache-2.0
#

# bootstrap
# - Simple protobuf declaration compilation

set -e  # exit immediate if a command exists with a non-zero status
shopt -s globstar  # enable bash globstar for recursive search

__help()
{
    [ -n "$1" ] && >&2 echo "error: $1"
    cat <<EOF

Usage: ${0##*/} [-p <protodir>] [-l <langid>] [-d <destdir>]

Where

  <protodir> the location of the .proto files to be compiled. This is
  the **root** dir.

  <langid> language binding identifier (e.g. "go" or "python").

    - The identifier value must be supported by protoc(1). ${0##*/}
      does **not** validate the language ID value.

    - If the value is "c", the script will use protoc-c(1) instead
      of protoc(1). Make sure it is installed and found in PATH.

    - If the value is "go", ${0##*/} appends ~/go/bin to PATH.

  <destdir> write the compiled protobuf messages to this directory.

Example

  $ bootstrap -p protofiles/ -l python -d proto/gen
    # Compile protobuf declarations for Python to ./proto/gen
EOF
    return 1
}

__find_command()
{
    result="$(command -v $1)"
    [ -z "$result" ] && {
        >&2 echo "error: $1: not found"
        return 1
    }
    echo $result
}

# Protobuffer compiler
#
[ -z "$PROTOC" ] && {
    PROTOC="$(__find_command protoc)"
}
[ -x "$PROTOC" ] || {
    echo "$PROTOC: file does not exist or execute permission is not granted"
    exit 1
}

# Save generated files to this directory.
#
DESTDIR=

# The location of the protobuf declaration (.proto) files.
#
PROTODIR=

# The language bindings ID to use (e.g. go or python)
#
LANGID=


compile_files()
{
    echo -n "Compiling the protobuf declarations for jomiel messages"
    for f in $PROTODIR/**/*.proto; do
        $PROTOC -I$PROTODIR --"$LANGID"_out=$DESTDIR $f || exit $?
        echo -n "."
    done
    echo "done."
    exit 0
}

while getopts "hd:p:l:" o; do
case "$o" in
    p) PROTODIR=$OPTARG ;;
    d) DESTDIR=$OPTARG ;;
    l) LANGID=$OPTARG ;;
    h) __help ;;
esac
done

shift $((OPTIND-1)) # Shift off the options and optional --

[ -z "$PROTODIR" ] && __help "-p <protodir> not specified"
[ -z "$DESTDIR" ] && __help "-d <destdir> not specified"
[ -z "$LANGID" ] && __help "-l <langid> not specified"

[ "$LANGID" = "c" ] && {
    [ -n "$PROTOC_C" ] && {
       PROTOC=$PROTOC_C
    }
    [ -z "$PROTOC" ] && {
        PROTOC="$(__find_command protoc-c)"
    }
}

[ "$LANGID" = "go" ] && {
  PATH=$PATH:~/go/bin
}

[ -d "$DESTDIR" ] || mkdir -p "$DESTDIR"
compile_files

exit $?

# vim: set ts=4 sw=4 tw=72 expandtab:
